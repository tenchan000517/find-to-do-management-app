#!/bin/bash

# 簡単なAPIテスト（サーバー起動チェック用）
echo "🔍 Discord Metrics API テスト準備完了"
echo ""
echo "次の手順でテストを実行してください："
echo ""
echo "1. 別ターミナルで開発サーバーを起動："
echo "   npm run dev"
echo ""
echo "2. サーバー起動後、以下のコマンドでテスト実行："
echo "   ./test-api.sh"
echo ""
echo "テスト内容："
echo "✅ CORS設定の確認"
echo "✅ GET リクエスト（データ取得）"
echo "✅ POST リクエスト（データ送信）"
echo "✅ 認証機能の確認"
echo "✅ エラーハンドリングの確認"
echo ""
echo "期待される結果："
echo "- すべてのリクエストが正常に処理される"
echo "- リアクション統計を含むメトリクスが保存される"
echo "- 新規ロール（3つ）が正しく表示される"
echo ""

# サンプルメトリクスデータの表示
echo "📊 送信されるテストデータ（サンプル）："
echo "{"
echo "  \"memberCount\": 1250,"
echo "  \"onlineCount\": 342,"
echo "  \"dailyMessages\": 567,"
echo "  \"reactionStats\": {"
echo "    \"total_reactions\": 892,"
echo "    \"top_emojis\": [{\"emoji\": \"👍\", \"count\": 145}]"
echo "  },"
echo "  \"roleCounts\": {"
echo "    \"新規ロール含む10種類のロール統計\""
echo "  }"
echo "}"
echo ""

# ファイル確認
echo "📁 作成されたファイル："
echo "✅ test-api.sh - API接続テストスクリプト"
echo "✅ test-discord-api.py - Python版テストスクリプト"
echo "✅ ReactionChart.tsx - リアクション統計チャート"
echo "✅ ReactionBarChart.tsx - チャンネル別リアクションチャート"
echo ""

echo "🚀 準備完了！サーバーを起動してテストを実行してください。"